<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dream.city.base.model.mapper.PlayerAccountMapper">
    <resultMap id="BasePlayerAccountResultMap" type="com.dream.city.base.model.entity.PlayerAccount">
        <result column="acc_id" jdbcType="INTEGER" property="accId"/>
        <result column="acc_player_id" jdbcType="INTEGER" property="accPlayerId"/>
        <result column="acc_addr" jdbcType="VARCHAR" property="accAddr"/>
        <result column="acc_pass" jdbcType="VARCHAR" property="accPass"/>
        <result column="acc_usdt" jdbcType="DOUBLE" property="accUsdt"/>
        <result column="acc_usdt_available" jdbcType="VARCHAR" property="accUsdtAvailable"/>
        <result column="acc_usdt_freeze" jdbcType="VARCHAR" property="accUsdtFreeze"/>
        <result column="acc_mt" jdbcType="VARCHAR" property="accMt"/>
        <result column="acc_mt_available" jdbcType="VARCHAR" property="accMtAvailable"/>
        <result column="acc_mt_freeze" jdbcType="INTEGER" property="accMtFreeze"/>
        <result column="acc_income" jdbcType="DOUBLE" property="accIncome"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
    acc_id, acc_player_id, acc_usdt, acc_usdt_available, acc_usdt_freeze, acc_mt, acc_mt_available, 
    acc_mt_freeze, acc_income, DATE_FORMAT(create_time,'%Y-%m-%d %h:%m:%s') create_time, DATE_FORMAT(update_time,'%Y-%m-%d %h:%m:%s') update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BasePlayerAccountResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from player_account
        where acc_id = #{accId,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from player_account
    where acc_id = #{accId,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.dream.city.base.model.entity.PlayerAccount">
    insert into player_account (acc_id, acc_player_id, acc_usdt,
      acc_usdt_available, acc_usdt_freeze, acc_mt,
      acc_mt_available, acc_income,acc_mt_freeze, create_time,
      update_time)
    values (#{accId,jdbcType=INTEGER}, #{accPlayerId,jdbcType=VARCHAR}, #{accUsdt,jdbcType=DECIMAL},
      #{accUsdtAvailable,jdbcType=DECIMAL}, #{accUsdtFreeze,jdbcType=DECIMAL}, #{accMt,jdbcType=DECIMAL},
      #{accMtAvailable,jdbcType=DECIMAL}, #{accMtFreeze,jdbcType=DECIMAL}, #{accIncome},#{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
    <insert id="insertSelective" parameterType="com.dream.city.base.model.entity.PlayerAccount">
        insert into player_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accId != null">
                acc_id,
            </if>
            <if test="accPlayerId != null">
                acc_player_id,
            </if>
            <if test="accUsdt != null">
                acc_usdt,
            </if>
            <if test="accUsdtAvailable != null">
                acc_usdt_available,
            </if>
            <if test="accUsdtFreeze != null">
                acc_usdt_freeze,
            </if>
            <if test="accMt != null">
                acc_mt,
            </if>
            <if test="accMtAvailable != null">
                acc_mt_available,
            </if>
            <if test="accMtFreeze != null">
                acc_mt_freeze,
            </if>
            <if test="accIncome != null">
                acc_income,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accId != null">
                #{accId,jdbcType=INTEGER},
            </if>
            <if test="accPlayerId != null">
                #{accPlayerId,jdbcType=VARCHAR},
            </if>
            <if test="accUsdt != null">
                #{accUsdt,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtAvailable != null">
                #{accUsdtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtFreeze != null">
                #{accUsdtFreeze,jdbcType=DECIMAL},
            </if>
            <if test="accMt != null">
                #{accMt,jdbcType=DECIMAL},
            </if>
            <if test="accMtAvailable != null">
                #{accMtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accMtFreeze != null">
                #{accMtFreeze,jdbcType=DECIMAL},
            </if>
            <if test="accMtFreeze != null">
                #{accIncome,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.dream.city.base.model.entity.PlayerAccount">
        update player_account
        <set>
            <if test="accPlayerId != null">
                acc_player_id = #{accPlayerId,jdbcType=VARCHAR},
            </if>
            <if test="accUsdt != null">
                acc_usdt = #{accUsdt,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtAvailable != null">
                acc_usdt_available = #{accUsdtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtFreeze != null">
                acc_usdt_freeze = #{accUsdtFreeze,jdbcType=DECIMAL},
            </if>
            <if test="accMt != null">
                acc_mt = #{accMt,jdbcType=DECIMAL},
            </if>
            <if test="accMtAvailable != null">
                acc_mt_available = #{accMtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accMtFreeze != null">
                acc_mt_freeze = #{accMtFreeze,jdbcType=DECIMAL},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where acc_id = #{accId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.dream.city.base.model.entity.PlayerAccount">
    update player_account
    set acc_player_id = #{accPlayerId,jdbcType=VARCHAR},
      acc_usdt = #{accUsdt,jdbcType=DECIMAL},
      acc_usdt_available = #{accUsdtAvailable,jdbcType=DECIMAL},
      acc_usdt_freeze = #{accUsdtFreeze,jdbcType=DECIMAL},
      acc_mt = #{accMt,jdbcType=DECIMAL},
      acc_mt_available = #{accMtAvailable,jdbcType=DECIMAL},
      acc_mt_freeze = #{accMtFreeze,jdbcType=DECIMAL},
      acc_income = #{accIncome,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where acc_id = #{accId,jdbcType=INTEGER}
  </update>


    <select id="getPlatformAccounts" resultMap="BasePlayerAccountResultMap"
            parameterType="com.dream.city.base.model.req.PlayerAccountReq">
        select
        <include refid="Base_Column_List"/>
        from player_account
        <where>
            acc_player_id in(${platformAccIds})
        </where>
        order by create_time desc
    </select>

    <select id="getPlayerAccountList" resultMap="BasePlayerAccountResultMap"
            parameterType="com.dream.city.base.model.entity.PlayerAccount">
        select
        <include refid="Base_Column_List"/>
        from player_account
        <where>
            and acc_id not in(#{platformAccIds,jdbcType=VARCHAR})
            <if test="accId != null">
                and acc_id = #{accId,jdbcType=INTEGER}
            </if>
            <if test="accPlayerId != null and accPlayerId != '' ">
                and acc_player_id = #{accPlayerId,jdbcType=VARCHAR}
            </if>
        </where>
        order by create_time desc
    </select>


    <!--<select id="getAccountByPlayerIds" resultMap="BasePlayerAccountResultMap"
            parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from player_account
        <where>
            <if test="accPlayerId != null and accPlayerId != '' ">
                and acc_player_id = #{accPlayerId,jdbcType=VARCHAR}
            </if>
        </where>
        order by create_time desc
    </select>
-->

    <update id="updateByPlayerId" parameterType="com.dream.city.base.model.entity.PlayerAccount" >
        update player_account
        <set >
            <if test="accUsdt != null" >
                acc_usdt = #{accUsdt,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtAvailable != null" >
                acc_usdt_available = #{accUsdtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accUsdtFreeze != null" >
                acc_usdt_freeze = #{accUsdtFreeze,jdbcType=DECIMAL},
            </if>
            <if test="accMt != null" >
                acc_mt = #{accMt,jdbcType=DECIMAL},
            </if>
            <if test="accMtAvailable != null" >
                acc_mt_available = #{accMtAvailable,jdbcType=DECIMAL},
            </if>
            <if test="accMtFreeze != null" >
                acc_mt_freeze = #{accMtFreeze,jdbcType=DECIMAL},
            </if>
            update_time = now(),
        </set>
        where acc_player_id = #{accPlayerId,jdbcType=VARCHAR}

    </update>


</mapper>