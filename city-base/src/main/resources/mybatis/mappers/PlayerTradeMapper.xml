<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dream.city.base.model.mapper.PlayerTradeMapper" >
  <resultMap id="BaseResultMap" type="com.dream.city.base.model.entity.PlayerTrade" >
    <id column="trade_id" property="tradeId" jdbcType="INTEGER" />
    <result column="trade_acc_id" property="tradeAccId" jdbcType="INTEGER" />
    <result column="trade_player_id" property="tradePlayerId" jdbcType="VARCHAR" />
    <result column="trade_order_id" property="tradeOrderId" jdbcType="INTEGER" />
    <result column="trade_amount" property="tradeAmount" jdbcType="DECIMAL" />
    <result column="personal_tax" property="personalTax" jdbcType="DECIMAL" />
    <result column="enterprise_tax" property="enterpriseTax" jdbcType="DECIMAL" />
    <result column="trade_type" property="tradeType" jdbcType="VARCHAR" />
    <result column="trade_status" property="tradeStatus" jdbcType="VARCHAR" />
    <result column="in_out" property="inOutStatus" jdbcType="VARCHAR" />
    <result column="trade_desc" property="tradeDesc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    trade_id, trade_acc_id, trade_player_id, trade_order_id, trade_amount, trade_type, personal_tax,enterprise_tax,verify_status,in_out,
    trade_desc,DATE_FORMAT(create_time,'%Y-%m-%d %h:%m:%s') create_time, DATE_FORMAT(update_time,'%Y-%m-%d %h:%m:%s') update_time
  </sql>

  <select id="getPlayerTradeById" resultType="com.dream.city.base.model.resp.PlayerTradeResp" parameterType="java.lang.Integer" >
    SELECT t.trade_id tradeId, t.trade_acc_id tradeAccId, t.trade_player_id playerId, t.trade_order_id tradeOrderId, t.trade_amount tradeAmount, t.trade_type tradeType,t.in_out inOutStatus,
        t.trade_desc tradeDesc,t.create_time createTime, t.update_time updateTime,p.player_name playerName,p.player_nick playerNick,
        t.personal_tax personalTax,t.enterprise_tax enterpriseTax,t.trade_status tradeStatus,
        (SELECT v1.verify_status FROM trade_verify v1 WHERE t.trade_id = v1.verify_trade_id ORDER BY v1.create_time DESC LIMIT 1) verifyStatus,
        (SELECT e1.earn_max FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) earnMax,
        (SELECT e1.earn_current FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) earnCurrent,
        (SELECT e1.is_withdrew FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) isWithdrew,
        (SELECT d.trade_amount FROM trade_detail d WHERE d.trade_id=t.trade_id and d.trade_detail_type = 'TRANSFER_TAX') transferTax
      FROM player_trade t LEFT JOIN city_player p ON t.trade_player_id = p.player_id
    where t.trade_id = #{tradeId,jdbcType=INTEGER}
  </select>

  <select id="getPlayerTrade" resultMap="BaseResultMap" parameterType="com.dream.city.base.model.entity.PlayerTrade" >
    select
    <include refid="Base_Column_List" />
    from player_trade
    <where>
      1=1
      <if test="tradeId != null" >
        and trade_id = #{tradeId,jdbcType=INTEGER}
      </if>
      <if test="tradeAccId != null" >
        and trade_acc_id = #{tradeAccId,jdbcType=INTEGER}
      </if>
      <if test="tradeOrderId != null" >
        and trade_order_id = #{tradeOrderId,jdbcType=INTEGER}
      </if>
      <if test="tradeAmount != null" >
        and trade_amount = #{tradeAmount,jdbcType=DECIMAL}
      </if>
      <if test="tradeType != null and tradeType != ''" >
        and trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
    </where>
    linit 1
  </select>

  <select id="getPlayerTradeList" resultType="com.dream.city.base.model.resp.PlayerTradeResp" parameterType="com.dream.city.base.model.req.PlayerTradeReq" >
    SELECT * FROM (
      SELECT t.trade_id tradeId, t.trade_acc_id tradeAccId, t.trade_player_id playerId, t.trade_order_id tradeOrderId, t.trade_amount tradeAmount, t.trade_type tradeType,t.in_out inOutStatus,
        t.trade_desc tradeDesc,t.create_time createTime, t.update_time updateTime,p.player_name playerName,p.player_nick playerNick,
        t.personal_tax personalTax,t.enterprise_tax enterpriseTax,t.trade_status tradeStatus,
        (SELECT v1.verify_status FROM trade_verify v1 WHERE t.trade_id = v1.verify_trade_id ORDER BY v1.create_time DESC LIMIT 1) verifyStatus,
        (SELECT e1.earn_max FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) earnMax,
        (SELECT e1.earn_current FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) earnCurrent,
        (SELECT e1.is_withdrew FROM player_earning e1,invest_order o WHERE t.trade_player_id = e1.earn_player_id AND e1.earn_invest_id=o.order_id and o.order_id = t.trade_order_id) isWithdrew,
        (SELECT d.trade_amount FROM trade_detail d WHERE d.trade_id=t.trade_id and d.trade_detail_type = 'TRANSFER_TAX') transferTax
      FROM player_trade t LEFT JOIN city_player p ON t.trade_player_id = p.player_id
    ) a
    <where>
      1=1
      <if test="tradeId != null" >
        and a.tradeId = #{tradeId,jdbcType=INTEGER}
      </if>
      <if test="tradeStatus != null and tradeStatus != ''" >
        and a.tradeStatus = #{tradeStatus,jdbcType=VARCHAR}
      </if>
      <if test="tradeType != null and tradeType != ''" >
        and a.tradeType = #{tradeType,jdbcType=VARCHAR}
      </if>
      <if test="tradeDesc != null and tradeDesc != ''" >
        and a.tradeDesc LIKE '%${tradeDesc}%'
      </if>
      <if test="playerName != null and playerName != ''" >
        and a.playerName LIKE '%${playerName}%'
      </if>
      <if test="playerNick != null and playerNick != ''" >
        and a.playerNick LIKE '%${playerNick}%'
      </if>
      <if test="createTimeStart != null and createTimeStart != ''" >
        and a.createTime <![CDATA[>=]]> STR_TO_DATE(#{createTimeStart,jdbcType=VARCHAR},'%Y-%m-%d %h:%m:%s')
      </if>
      <if test="createTimeEnd != null and createTimeEnd != ''" >
        and a.createTime <![CDATA[<=]]> STR_TO_DATE(#{createTimeEnd,jdbcType=VARCHAR},'%Y-%m-%d %h:%m:%s')
      </if>
    </where>
    order by a.createTime desc
  </select>

  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="tradeId" parameterType="com.dream.city.base.model.entity.PlayerTrade" >
    insert into player_trade
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        trade_id,
      </if>
      <if test="tradeAccId != null" >
        trade_acc_id,
      </if>
      <if test="tradePlayerId != null" >
        trade_player_id,
      </if>
      <if test="tradeOrderId != null" >
        trade_order_id,
      </if>
      <if test="tradeAmount != null" >
        trade_amount,
      </if>
      <if test="tradeType != null" >
        trade_type,
      </if>
      <if test="tradeStatus != null" >
        trade_status,
      </if>
      <if test="personalTax != null" >
        personal_tax,
      </if>
      <if test="enterpriseTax != null" >
        enterprise_tax,
      </if>
      <if test="inOutStatus != null" >
        in_out,
      </if>
      <if test="tradeDesc != null" >
        trade_desc,
      </if>
      create_time,
      update_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="tradeId != null" >
        #{tradeId,jdbcType=INTEGER},
      </if>
      <if test="tradeAccId != null" >
        #{tradeAccId,jdbcType=INTEGER},
      </if>
      <if test="tradePlayerId != null" >
        #{tradePlayerId,jdbcType=VARCHAR},
      </if>
      <if test="tradeOrderId != null" >
        #{tradeOrderId,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null" >
        #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeType != null" >
        #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null" >
        #{tradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="personalTax != null" >
        #{personalTax,jdbcType=DECIMAL},
      </if>
      <if test="enterpriseTax != null" >
        #{enterpriseTax,jdbcType=DECIMAL},
      </if>
      <if test="inOutStatus != null" >
        #{inOutStatus,jdbcType=VARCHAR},
      </if>
      <if test="tradeDesc != null" >
        #{tradeDesc,jdbcType=VARCHAR},
      </if>
      now(),
      now(),
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dream.city.base.model.entity.PlayerTrade" >
    update player_trade
    <set >
      <if test="tradeAccId != null" >
        trade_acc_id = #{tradeAccId,jdbcType=INTEGER},
      </if>
      <if test="tradePlayerId != null" >
        trade_player_id = #{tradePlayerId,jdbcType=VARCHAR},
      </if>
      <if test="tradeOrderId != null" >
        trade_order_id = #{tradeOrderId,jdbcType=INTEGER},
      </if>
      <if test="tradeAmount != null" >
        trade_amount = #{tradeAmount,jdbcType=DECIMAL},
      </if>
      <if test="tradeType != null" >
        trade_type = #{tradeType,jdbcType=VARCHAR},
      </if>
      <if test="tradeStatus != null" >
        trade_status = #{tradeStatus,jdbcType=VARCHAR},
      </if>
      <if test="personalTax != null" >
        personal_tax = #{personalTax,jdbcType=DECIMAL},
      </if>
      <if test="enterpriseTax != null" >
        enterprise_tax = #{enterpriseTax,jdbcType=DECIMAL},
      </if>
      <if test="inOutStatus != null" >
        in_out = #{inOutStatus,jdbcType=VARCHAR},
      </if>
      <if test="tradeDesc != null" >
        trade_desc = #{tradeDesc,jdbcType=VARCHAR},
      </if>
      update_time = now(),
    </set>
    where trade_id = #{tradeId,jdbcType=INTEGER}
  </update>


</mapper>