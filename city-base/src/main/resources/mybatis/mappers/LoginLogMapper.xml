<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dream.city.base.model.mapper.LoginLogMapper">
  <resultMap id="BaseResultMap" type="com.dream.city.base.model.entity.LoginLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="player_id" jdbcType="VARCHAR" property="playerId" />
    <result column="imei" jdbcType="VARCHAR" property="imei" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="descr" jdbcType="VARCHAR" property="descr" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, player_id, imei, ip, descr, type, DATE_FORMAT(create_time,'%Y-%m-%d %h:%m:%s') create_time
  </sql>

  <select id="getLoginLogList" parameterType="com.dream.city.base.model.req.LoginLogReq" resultType="com.dream.city.base.model.resp.LoginLogResp">
    select l.id, l.player_id playerId, l.imei, l.ip, l.descr, type, DATE_FORMAT(l.create_time,'%Y-%m-%d %h:%m:%s') createTime,
         e.imgurl,p.player_name playerName,p.player_nick playerNick
    from player_login_log l left join city_player p on l.player_id= p.player_id left join player_ext e on l.player_id=e.player_id
    where 1=1
    <if test="id != null and id != ''">
      and 1.id = #{id,jdbcType=BIGINT}
    </if>
    <if test="playerId != null and playerId != ''">
      and 1.player_id = #{playerId,jdbcType=VARCHAR}
    </if>
    <if test="playerName != null and playerName != ''" >
      and p.player_name = #{playerName,jdbcType=VARCHAR}
    </if>
    <if test="playerNick != null and playerNick != ''" >
      and p.player_nick = #{playerNick,jdbcType=VARCHAR}
    </if>
    <if test="descr != null and descr != ''" >
      and l.descr = #{descr,jdbcType=VARCHAR}
    </if>
    <if test="imei != null and imei != ''" >
      and l.imei = #{imei,jdbcType=VARCHAR}
    </if>
    <if test="ip != null and ip != ''" >
      and l.ip = #{ip,jdbcType=VARCHAR}
    </if>
    order by l.create_time desc
  </select>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="com.dream.city.base.model.resp.LoginLogResp">
    select l.id, l.player_id playerId, l.imei, l.ip, l.descr, type, DATE_FORMAT(l.create_time,'%Y-%m-%d %h:%m:%s') createTime,
    e.imgurl,p.player_name playerName,p.player_nick playerNick
    from player_login_log l left join city_player p on l.player_id= p.player_id left join player_ext e on l.player_id=e.player_id
    where l.id = #{id,jdbcType=BIGINT}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from player_login_log
    where id = #{id,jdbcType=BIGINT}
  </delete>


  <insert id="insertSelective" parameterType="com.dream.city.base.model.entity.LoginLog">
    insert into player_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="playerId != null">
        player_id,
      </if>
      <if test="imei != null">
        imei,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="type != null">
        type,
      </if>
      create_time
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="playerId != null">
        #{playerId,jdbcType=VARCHAR},
      </if>
      <if test="imei != null">
        #{imei,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      now()
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.dream.city.base.model.entity.LoginLog">
    update player_login_log
    <set>
      <if test="playerId != null">
        player_id = #{playerId,jdbcType=VARCHAR},
      </if>
      <if test="imei != null">
        imei = #{imei,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="create_time != null">
        create_time = #{create_time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>


</mapper>