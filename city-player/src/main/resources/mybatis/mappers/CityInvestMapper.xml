<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dream.city.player.domain.mapper.CityInvestMapper" >
  <resultMap id="BaseResultMap" type="com.dream.city.base.model.entity.CityInvest" >
    <id column="in_id" property="inId" jdbcType="INTEGER" />
    <result column="in_name" property="inName" jdbcType="VARCHAR" />
    <result column="in_limit" property="inLimit" jdbcType="REAL" />
    <result column="in_start" property="inStart" jdbcType="TIMESTAMP" />
    <result column="in_tax" property="inTax" jdbcType="DOUBLE" />
    <result column="in_earning" property="inEarning" jdbcType="VARCHAR" />
    <result column="in_end" property="inEnd" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    in_id, in_name, in_limit, in_start, in_tax, in_earning, in_end
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from city_invest
    where in_id = #{inId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from city_invest
    where in_id = #{inId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dream.city.base.model.entity.CityInvest" >
    insert into city_invest (in_id, in_name, in_limit, 
      in_start, in_tax, in_earning, 
      in_end)
    values (#{inId,jdbcType=INTEGER}, #{inName,jdbcType=VARCHAR}, #{inLimit,jdbcType=REAL}, 
      #{inStart,jdbcType=TIMESTAMP}, #{inTax,jdbcType=DOUBLE}, #{inEarning,jdbcType=VARCHAR}, 
      #{inEnd,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dream.city.base.model.entity.CityInvest" >
    insert into city_invest
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="inId != null" >
        in_id,
      </if>
      <if test="inName != null" >
        in_name,
      </if>
      <if test="inLimit != null" >
        in_limit,
      </if>
      <if test="inStart != null" >
        in_start,
      </if>
      <if test="inTax != null" >
        in_tax,
      </if>
      <if test="inEarning != null" >
        in_earning,
      </if>
      <if test="inEnd != null" >
        in_end,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="inId != null" >
        #{inId,jdbcType=INTEGER},
      </if>
      <if test="inName != null" >
        #{inName,jdbcType=VARCHAR},
      </if>
      <if test="inLimit != null" >
        #{inLimit,jdbcType=REAL},
      </if>
      <if test="inStart != null" >
        #{inStart,jdbcType=TIMESTAMP},
      </if>
      <if test="inTax != null" >
        #{inTax,jdbcType=DOUBLE},
      </if>
      <if test="inEarning != null" >
        #{inEarning,jdbcType=VARCHAR},
      </if>
      <if test="inEnd != null" >
        #{inEnd,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dream.city.base.model.entity.CityInvest" >
    update city_invest
    <set >
      <if test="inName != null" >
        in_name = #{inName,jdbcType=VARCHAR},
      </if>
      <if test="inLimit != null" >
        in_limit = #{inLimit,jdbcType=REAL},
      </if>
      <if test="inStart != null" >
        in_start = #{inStart,jdbcType=TIMESTAMP},
      </if>
      <if test="inTax != null" >
        in_tax = #{inTax,jdbcType=DOUBLE},
      </if>
      <if test="inEarning != null" >
        in_earning = #{inEarning,jdbcType=VARCHAR},
      </if>
      <if test="inEnd != null" >
        in_end = #{inEnd,jdbcType=TIMESTAMP},
      </if>
    </set>
    where in_id = #{inId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dream.city.base.model.entity.CityInvest" >
    update city_invest
    set in_name = #{inName,jdbcType=VARCHAR},
      in_limit = #{inLimit,jdbcType=REAL},
      in_start = #{inStart,jdbcType=TIMESTAMP},
      in_tax = #{inTax,jdbcType=DOUBLE},
      in_earning = #{inEarning,jdbcType=VARCHAR},
      in_end = #{inEnd,jdbcType=TIMESTAMP}
    where in_id = #{inId,jdbcType=INTEGER}
  </update>
</mapper>