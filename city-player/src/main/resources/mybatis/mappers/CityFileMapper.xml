<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dream.city.player.domain.mapper.CityFileMapper" >
  <resultMap id="BaseResultMap" type="com.dream.city.player.domain.entity.CityFile" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="file_url" property="fileUrl" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="VARCHAR" />
    <result column="is_valid" property="isValid" jdbcType="BIT" />
    <result column="from_id" property="fromId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_url, file_type, is_valid, from_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from city_file
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from city_file
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dream.city.player.domain.entity.CityFile" >
    insert into city_file (id, file_url, file_type, 
      is_valid, from_id, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{fileUrl,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=BIT}, #{fromId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.dream.city.player.domain.entity.CityFile" >
    insert into city_file
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="fileUrl != null" >
        file_url,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="isValid != null" >
        is_valid,
      </if>
      <if test="fromId != null" >
        from_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="fileUrl != null" >
        #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        #{isValid,jdbcType=BIT},
      </if>
      <if test="fromId != null" >
        #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dream.city.player.domain.entity.CityFile" >
    update city_file
    <set >
      <if test="fileUrl != null" >
        file_url = #{fileUrl,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null" >
        is_valid = #{isValid,jdbcType=BIT},
      </if>
      <if test="fromId != null" >
        from_id = #{fromId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dream.city.player.domain.entity.CityFile" >
    update city_file
    set file_url = #{fileUrl,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=BIT},
      from_id = #{fromId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>